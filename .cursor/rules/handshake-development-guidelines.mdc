# Handshake Development Guidelines

## Coding Standards

### Frontend Standards
- Use functional React components with Tailwind CSS classes
- Use PascalCase for component filenames (e.g., `BookingCard.tsx`)
- Keep components small and focused on a single responsibility
- Use React hooks for state management and side effects
- Follow naming conventions:
  - React hooks: `useBookingForm`, `useAuth`
  - Components: PascalCase (e.g., `ProfileCard`, `BookingForm`)

### Backend Standards
- Organize routes into `server/src/routes/` with clear responsibility separation
- Use TypeScript for new code (`.ts` extension)
- Use `async/await` for MongoDB operations (no callbacks)
- Follow RESTful API design principles
- Implement proper error handling with standardized response formats

### Database Standards
- Database collections: `camelCase` (e.g., `users`, `professionals`)
- Use MongoDB schema validation where possible
- Keep embedded documents reasonably sized
- Use transactions for operations spanning multiple collections
- Use projection (`select()`) to retrieve only needed fields

### Security Best Practices
- Never expose JWT secrets or Stripe keys â€“ use `.env` files
- Validate API inputs with Zod (e.g., email/password checks)
- Implement rate limiting on authentication endpoints
- Sanitize user inputs to prevent injection attacks
- Use HTTPS for all production communications

## Documentation Requirements
- Update `notepad.md` with reusable code snippets
- Keep `DATABASE_SCHEMA.md` in sync with model changes
- Update all routes created and used in the `API_ROUTES.md` file
- Document authentication flows and token management

## Development Workflow
- Create feature branches from `main` for new features
- Write tests for critical functionality
- Use descriptive commit messages explaining the changes
- Review code for security and performance issues before merging
- Maintain backward compatibility with existing API endpoints

## Key Reference Files
- [.cursor/rules/project-rules.mdc](mdc:.cursor/rules/project-rules.mdc) - Core project rules
- [server/DATABASE_SCHEMA.md](mdc:server/DATABASE_SCHEMA.md) - Database schema reference
- [server/API_ROUTES.md](mdc:server/API_ROUTES.md) - API endpoints reference

